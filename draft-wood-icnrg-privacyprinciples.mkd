---
title: ICN Privacy Principles
abbrev: ICN Privacy Principles
docname: draft-wood-icnrg-privacyprinciples
date: 2015-10-14
category: info

ipr: trust200902
area: General
workgroup: ICNRG Working Group
keyword: Internet-Draft

stand_alone: yes
pi: [toc, sortrefs, symrefs]

author:
-
    ins: M. Stapp
    name: Mark Stapp
    org: Cisco
    email: mjs@cisco.com
-
    ins: C. A. Wood
    name: Christopher A. Wood
    org: PARC, Inc.
    email: christopher.wood@parc.com

normative:
    RFC2119:
    RFC6973:
    RFC7285:

--- abstract

This document lays out a set of principles that define the privacy requirements for 
ICN applications.

--- middle

# Introduction

RFC6973 {{RFC6973}} outlines major security and privacy threats and countermeasures
for networking protocols. It identifies and describes several attacks which can
be carried out against users, including correlation, identification, secondary
use (of personal or private information), unauthorized or oblivious disclosure,
and user exclusion. We refer the reader to {{RFC6973}} for more details about
these threats.

The authors of this document believe that the ICNRG should share the view of the
IP community which states that passive and pervasive observation and surveillance
is an attack on individuals' communication {{RFC7285}}. Consequently, the ICNRG should
strive to meet or exceed the privacy protections driven by the IETF. Moreover,
privacy preserving mechanisms should evolve as Internet security threats and standards
change. This means that ICN should always use best practices for protecting
the privacy of individuals.

To be specific, ICN communication should use, by default, best practice cryptographic
methods to ensure privacy and confidentiality. Presently, this means that all communication
should be protected by forward-secure encryption. We therefore claim that the mechanism
to bootstrap this type of communication should be a native part of ICN rather
than add-on protocols analogous to (D)TLS.

In this document we outline several principles for private communication in ICN
based on accepted best practices to prevent or deter the aforementioned threats.
We do not specify mechanisms to satisfy these principles since that is still an
open topic of research in the field.

##  Conventions and Terminology

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in RFC 2119 {{RFC2119}}.

# Privacy Notions

Privacy has no clear definition. Rather, as RFC6973 {{RFC6973}} describes, it is a spectrum
of different threats against a user and their data. This document describes several notions
of privacy with respect to specific threats, e.g., information disclosure and correlation.
If we are to outline privacy principles for ICN then we must too have similar notions of
privacy. To that end, the following list enumerates and describes types of privacy with which 
we are concerned. 

1. Data privacy: application data in an ICN message, e.g., the content object payload, is not disclosed or leaked to unauthorized persons.
2. Transport privacy: the entire contents of an ICN message are not disclosed or leaked to forwarders (i.e., this information is only visible to the consumer and producer). 
3. Request (lookup) privacy: ICN *requests* are not disclosed or leaked to anyone but the originator of the request.
4. Application privacy: Information about an application is not leaked to unauthorized persons through network activity.

# A Catalog of Privacy-Sensitive Information

In this section we begin an enumeration of privacy-related information that should
be considered in the context of our principles (detailed in the following section).

- User- or -host-identifying information.

    Examples include user names, account names (or numbers), email addresses, source
    or location information, long-lived key names, certificates, or certificate names.

- Application-specific information.

    This includes any information beyond what is necessary to route traffic
    for a particular application between parties involved.

- Information shared across users.

    Examples include common group keys or content object names.
    
-  Metadata collected from network traffic.

	 Examples include packet headers and timing information.

# ICN Privacy Principles

This section outlines a proposed set of privacy principles for ICN architectures.
These are inspired by recent activities in the IETF to prevent attacks such
as mass surveillance in a plethora of Internet protocols, e.g., DNS and TCP.
These principles are intended to be necessary, but not sufficient, conditions for 
data, transport, and application privacy. 

1. All ICN messages should be encrypted by default.

    - Rationale: Cleartext communication is not best practice.

2. The privacy of ICN messages should rely on forward-secure keys.

    - Rationale: Privacy mechanisms based on long-lived key pairs are not
    forward-secure, i.e., they are not secure if the private key is compromised. Moreover,
    long-lived key pairs can be traced to individuals and can lead to correlation
    and other information leakage in requests and responses. Neither of these are
    considered best practice.

3. ICN messages should not reveal information about the data exchanged or entities involved 
in the production or consumption of data beyond what can be learned from their relative
location in the network.

    - Rationale: Minimize information leakage and linkage between packets and entities
    involved in their transport. Moreover, this is to prevent revealing information about the 
    parties involved in a data exchange through their names.

4. Clients should always authenticate an endpoint to which personal identification
information is sent.

    - Rationale: Privacy-sensitive information should never be disclosed to an endpoint
    (e.g., a router or producer application) that is not authenticated.

5. Application data contained in an ICN message should only be viewable by authenticated
and authorized parties.

    - Rationale: Applications should not rely on network or link-layer encryption
    for protection since the network cannot be trusted. End-to-end encryption between
    the client and endpoint serving content is best practice.

6. Where authentication of clients by servers is necessary (e.g., for access control),
per-application credentials should be used.

    - Rationale: Compromised user credentials for one application does not compromise
    other applications or services.

# Privacy in Practice

In this section we describe the practical implications that come from implementing 
the privacy principles outlined in the previous section.

1. If encryption is enabled by default then only the users who possess the keys are able
to view or consume the data. This restricts the benefits of caching to those consumers who 
are in possession of the correct key(s). For example, a content may be encrypted such that
only a subset of users of a particular application can access it. 

2. There must be some negotiation between endpoints transferring data, whether the endpoint
is a producer or replica. This negotiation must use fresh randomness to create forward-secure
keys used to encrypt the traffic. A native protocol must exist to accomplish this negotiation
as a prelude and necessary requirement to exchange any application data. 

3. Application information must be contained inside an envelope protected using some form
of encryption that satisfies the property #2. This does not mean that content objects cannot
carry signatures or public keys, for example. It simply means that such information must not be
exposed in the clear as it moves through the network.

4. Clients should never send application data to an entity or endpoint which has not been 
authenticated. Session negotiation should allow endpoint (and in some cases mutual) authentication.

5. The observable contents of a message convey no application information. This means that names
no longer refer to objects but rather to services from which content can be produced. This
is analogous to the TLS+TCP/IP model wherein encrypted packets are sent between a client and some
producer POP or CDN. All application data is contained in an encrypted envelope. 

6. User credentials should not be used across applications. Every consumer should possess and employ
a unique set of credentials for every application they use. 

--- back

# Data Correlation and Access Pattern Problems

One of the fundamental problems with vanilla request-based ICN architectures is that
an on-path or eavesdropping adversary can learn when different consumers
request the same data by virtue of the fact that two requests for the same data
will carry the same locator and identifier information. As a result, the access
patterns of individual and groups of users are leaked. Hiding this information
is the main motivation for cryptographic algorithms such as Oblivious Ram {{ORAM}}. 
The goal of ORAM structures is to provide cryptographic guarantees that the
access patterns of a client to some server remain hidden. However effective, ORAM
structures remain to be expensive in terms of computation and bandwidth. More lightweight
approaches, such as those that rely on searchable encryption schemes (SSE) {{SSE}} exist. 
The work of {{1}} showed how to a modicum of a priori knowledge about the encrypted
data set can be used to break SSE techniques to recover sensitive information. 
Fortunately, the SSE paradigm does not accurately model the ICN request-response paradigm 
since the responses, not the requests, requests are encrypted. In fact, the ICN
problem is worse: the access patterns must necessarily be revealed in normal
communications. 





<!--
1: https://www.internetsociety.org/sites/default/files/06_1.pdf
2: http://www.cc.gatech.edu/people/home/santosh/papers/asplos2004.pdf
3: http://www.cs.berkeley.edu/~dawnsong/papers/se.pdf
-->

